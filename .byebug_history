n
contacts = current_agent.contacts.includes(:agent, :classifications)
n
filtered_contacts
@contact_search_form = Contacts::ContactSearchForm.new(contact_search_form_params)
c
contacts.last.classifiable_type
pp contacts.last.classifiable_type
pp contacts.last
contacts.last
contacts.where(id: contact_ids)
contacts.reload
contacts.pluck(:classifiable_type)
contacts.update_all(classifiable_type:'Contact')
contacts.pluck(:classifiable_type)
contacts.pluck(:classifiable_type).count
contacts.count
contact.count
contacts
contacts.where(id: contact_ids)
pp  Contact.find(10214)
Contact.find(10214)
Agent.find(10214)
Classification.find(10214)
contact_ids = Classification.where(classifiable_type: 'Contact').where('LOWER(name) IN (?)', normalized).pluck(:classifiable_id).uniq
contacts.count
pp  contacts.where(id: contact_ids)
contacts.where(id: contact_ids)
      contact_ids = Classification.where(classifiable_type: 'Contact').where('LOWER(name) IN (?)', normalized).pluck(:classifiable_id).uniq
normalized = normalize_classifications(selected_classifications)
contacts = current_agent.contacts.includes(:agent, :classifications)
contacts
 contacts = apply_classification_filter(contacts)
contacts = current_agent.contacts.includes(:agent, :classifications)
contacts
pp  contacts = apply_classification_filter(contacts)
contacts = apply_classification_filter(contacts)
selected_classifications.present?
pp  contacts = apply_classification_filter(contacts) if selected_classifications.present?
contacts = apply_classification_filter(contacts) if selected_classifications.present?
contacts = current_agent.contacts.includes(:agent, :classifications)
normalized = ["agent"]
normalized  =  agent
    contact_ids = Classification.where(classifiable_type: 'Contact').where('LOWER(name) IN (?)', normalized) .pluck(:classifiable_id).uniq
c
exit
current_agent.contacts
current_agent.contacts.includes(:agent, :classifications)
 current_agent.contacts
ap _
current_agent
n
 ActiveModel::Name.new(contact_search_form_params, nil, 'ContactSearchForm')
contact_search_form_params
ap _
  @contact_search_form = Contacts::ContactSearchForm.new(contact_search_form_params)
x

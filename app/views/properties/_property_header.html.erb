<%= render Page::HeaderComponent.new(property.name_label, last_updated_at: property.updated_at) do %>
  <div class="flex justify-between w-full">
    <div class="mt-4 flex items-center justify-between space-x-4 sm:mt-0 sm:ml-6 sm:flex-shrink-0 sm:justify-start">

      <% if PropertiesPolicy.edit?(property, Current.agent) %>
        <div class="sm:px-4">
          <%= render ToggleComponent.new(property.share, title: 'Share', url: share_property_path(property)) %>
        </div>
      <% else %>
        <%= render BadgeComponent.new(text: "Shared by #{property.agent.name}", color: :blue) %>
      <% end %>

      <%= edit_property_button(property) if PropertiesPolicy.edit?(property, Current.agent) %>
      <%= render DownloadBrochureComponent.new(property) if property.contract? %>

      <% if PropertiesPolicy.edit?(property, Current.agent) %>
        <div class="relative inline-block text-left" data-controller="toggle" data-toggle-classes-value="opacity-100 opacity-0 hidden block">
          <div>
            <button type="button" class="-my-2 p-2 rounded-full bg-white border border-gray-300 flex items-center text-gray-400 hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-indigo-500" id="menu-0-button" aria-expanded="false" aria-haspopup="true" data-action="toggle#toggle">
              <span class="sr-only">Open options</span>
              <!-- Heroicon name: solid/dots-vertical -->
              <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z" />
              </svg>
            </button>
          </div>
          <div class="origin-top-right absolute right-0 mt-2 w-72 z-10 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none opacity-0 hidden" role="menu" aria-orientation="vertical" aria-labelledby="menu-0-button" tabindex="-1" data-toggle-target="content">
            <div class="divide-y" role="none">
              <% if property.contract.present? %>
                <div>
                  <% if Rails.env.development? %>
                    <%= render PopupMenuItemComponent.new(name: 'Display GriffinProperty JSON', url: griffin_property_com_au_listing_path(property, format: :json), role: 'menuitem', tab_index: -1) %>
                  <% end %>
                  <% if @account.griffin_property_credentials? %>
                    <%= render PopupMenuItemComponent.new(name: 'Upload listing to Company website', url: new_griffin_property_com_au_listing_path(property), role: 'menuitem', tab_index: -1) %>
                  <% end %>
                  <%= render PopupMenuItemComponent.new(name: 'Upload listing to Real Commercial', url: new_rea_listing_path(property), role: 'menuitem', tab_index: -1) %>
                  <% if property.rea_listed? || Rails.env.development? %>
                    <%= render PopupMenuItemComponent.new(name: 'Remove listing from Real Commercial', url: rea_listing_path(property), data: { turbo_method: :delete }, role: 'menuitem', tab_index: -1) %>
                  <% end %>
                  <% if Rails.env.development? %>
                    <%= render PopupMenuItemComponent.new(name: 'Display Real Commercial XML', url: rea_listing_path(property, format: :xml), role: 'menuitem', tab_index: -1) %>
                  <% end %>
                  <%= render PopupMenuItemComponent.new(name: 'Upload listing to Commercial Real Estate', url: new_domain_com_au_listing_path(property), role: 'menuitem', tab_index: -1) %>
                  <% if property.domain_com_au_removable? || Rails.env.development? %>
                    <%= render PopupMenuItemComponent.new(name: 'Remove listing from Commercial Real Estate', url: domain_com_au_listing_path(property), data: { turbo_method: :delete }, role: 'menuitem', tab_index: -1) %>
                  <% end %>
                  <% if Rails.env.development? %>
                    <%= render PopupMenuItemComponent.new(name: 'Display Commercial Real Estate JSON', url: domain_com_au_listing_path(property, format: :json), role: 'menuitem', tab_index: -1) %>
                  <% end %>
                </div>
              <% end %>
              <div>
                <%= render PopupMenuItemComponent.new(name: 'Duplicate', url: duplicate_properties_path(property), data: { turbo_method: :post }, role: 'menuitem', tab_index: -1) %>
              </div>
              <div>
                <% if property.archived? %>
                  <%= render PopupMenuItemComponent.new(name: 'Restore', url: unarchive_property_path(property), data: { turbo_method: :patch }, role: 'menuitem', tab_index: -1) %>
                <% else %>
                  <%= render PopupMenuItemComponent.new(name: 'Archive', url: property_path(property), type: :delete, data: { turbo_method: :delete }, role: 'menuitem', tab_index: -1) %>
                <% end %>
              </div>
            </div>
          </div>
        </div>
      <% end %>
    </div>
  </div>
<% end %>